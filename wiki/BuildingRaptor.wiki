#summary How to build raptor.
#labels Featured,Phase-Implementation
#sidebar MainSideBar

= Prerequisites =

  * [http://qt.nokia.com/products/ Qt 4.x]
  * [http://www.python.org/ Python] (use by waf and sphinx)
  * [http://sphinx.pocoo.org/ Sphinx] (use for generate the documentation)

= Building raptor with waf =
To get more information on [http://code.google.com/p/waf/ waf build system]

Just type these command from raptor root path:
{{{
./waf configure
./waf release
}}}

= Building raptor on linux with qmake =
{{{
qmake
make
}}}

raptor executable is in delivery/release directory.

= Building raptor on window with qmake =

You can use the Qt Command prompt directly ant type

{{{
qmake
mingw32-make release
}}}

Otherwise you'll have to setup the Qt environnement, (add python and sphinx executable into your path for the documentation generation).

Define the environnement variables as the following exemple:

  * QTDIR
    * C:\Qt\xxx\qt

  * QMAKESPEC
    * win32-g++

  * PATH=
    * C:\Qt\xxx\mingw\bin
    * C:\Qt\xxx\bin
    * C:\Qt\xxx\qt\bin
    * C:\Python27
    * C:\Python27\Scripts

Then launch a terminal (cmd.exe) or another console 
( [http://www.mingw.org/wiki/msys msys] or [http://sourceforge.net/projects/console/ console] ) and build raptor :



{{{
qmake
mingw32-make release
}}}

raptor executable is in delivery/release directory.

= Building with QtCreator =

Just import the build.pro (File -> Open File or Project ...).
You will obtain something like the following screenshot (depending on your qtcreator version)

[http://raptor.googlecode.com/svn/wiki/images/qtcreator_step1.png]

Click on finish. You can now select the target you want to build (debug or release). 
You can build and execute raptor from QtCreator.

[http://raptor.googlecode.com/svn/wiki/images/qtcreator_step2.png]